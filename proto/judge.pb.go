// Code generated by protoc-gen-go. DO NOT EDIT.
// source: judge.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type JudgeRequest struct {
	Sid                  uint32   `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Language             string   `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Code                 string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JudgeRequest) Reset()         { *m = JudgeRequest{} }
func (m *JudgeRequest) String() string { return proto.CompactTextString(m) }
func (*JudgeRequest) ProtoMessage()    {}
func (*JudgeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b4fa635fb2baaa, []int{0}
}

func (m *JudgeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JudgeRequest.Unmarshal(m, b)
}
func (m *JudgeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JudgeRequest.Marshal(b, m, deterministic)
}
func (m *JudgeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JudgeRequest.Merge(m, src)
}
func (m *JudgeRequest) XXX_Size() int {
	return xxx_messageInfo_JudgeRequest.Size(m)
}
func (m *JudgeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JudgeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JudgeRequest proto.InternalMessageInfo

func (m *JudgeRequest) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *JudgeRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *JudgeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type JudgeResponse struct {
	Sid                  uint32   `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Result               string   `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JudgeResponse) Reset()         { *m = JudgeResponse{} }
func (m *JudgeResponse) String() string { return proto.CompactTextString(m) }
func (*JudgeResponse) ProtoMessage()    {}
func (*JudgeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b4fa635fb2baaa, []int{1}
}

func (m *JudgeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JudgeResponse.Unmarshal(m, b)
}
func (m *JudgeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JudgeResponse.Marshal(b, m, deterministic)
}
func (m *JudgeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JudgeResponse.Merge(m, src)
}
func (m *JudgeResponse) XXX_Size() int {
	return xxx_messageInfo_JudgeResponse.Size(m)
}
func (m *JudgeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JudgeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JudgeResponse proto.InternalMessageInfo

func (m *JudgeResponse) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *JudgeResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*JudgeRequest)(nil), "proto.JudgeRequest")
	proto.RegisterType((*JudgeResponse)(nil), "proto.JudgeResponse")
}

func init() { proto.RegisterFile("judge.proto", fileDescriptor_a2b4fa635fb2baaa) }

var fileDescriptor_a2b4fa635fb2baaa = []byte{
	// 169 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x2a, 0x4d, 0x49,
	0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x01, 0x5c, 0x3c, 0x5e,
	0x20, 0xd1, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x01, 0x2e, 0xe6, 0xe2, 0xcc, 0x14,
	0x09, 0x46, 0x05, 0x46, 0x0d, 0xde, 0x20, 0x10, 0x53, 0x48, 0x8a, 0x8b, 0x23, 0x27, 0x31, 0x2f,
	0xbd, 0x34, 0x31, 0x3d, 0x55, 0x82, 0x49, 0x81, 0x51, 0x83, 0x33, 0x08, 0xce, 0x17, 0x12, 0xe2,
	0x62, 0x49, 0xce, 0x4f, 0x49, 0x95, 0x60, 0x06, 0x8b, 0x83, 0xd9, 0x4a, 0x96, 0x5c, 0xbc, 0x50,
	0x13, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0xb1, 0x18, 0x29, 0xc6, 0xc5, 0x56, 0x94, 0x5a, 0x5c,
	0x9a, 0x53, 0x02, 0x35, 0x10, 0xca, 0x33, 0x72, 0xe1, 0x62, 0x05, 0x6b, 0x15, 0xb2, 0xe6, 0xe2,
	0x73, 0x4f, 0x2d, 0x81, 0x19, 0x53, 0x9a, 0x53, 0x22, 0x24, 0x0c, 0x71, 0xb6, 0x1e, 0xb2, 0x63,
	0xa5, 0x44, 0x50, 0x05, 0x21, 0xf6, 0x25, 0xb1, 0x81, 0x05, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x25, 0xd7, 0xe0, 0x53, 0xef, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JudgeClient is the client API for Judge service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JudgeClient interface {
	GetJudgeResult(ctx context.Context, in *JudgeRequest, opts ...grpc.CallOption) (*JudgeResponse, error)
}

type judgeClient struct {
	cc *grpc.ClientConn
}

func NewJudgeClient(cc *grpc.ClientConn) JudgeClient {
	return &judgeClient{cc}
}

func (c *judgeClient) GetJudgeResult(ctx context.Context, in *JudgeRequest, opts ...grpc.CallOption) (*JudgeResponse, error) {
	out := new(JudgeResponse)
	err := c.cc.Invoke(ctx, "/proto.Judge/GetJudgeResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JudgeServer is the server API for Judge service.
type JudgeServer interface {
	GetJudgeResult(context.Context, *JudgeRequest) (*JudgeResponse, error)
}

// UnimplementedJudgeServer can be embedded to have forward compatible implementations.
type UnimplementedJudgeServer struct {
}

func (*UnimplementedJudgeServer) GetJudgeResult(ctx context.Context, req *JudgeRequest) (*JudgeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJudgeResult not implemented")
}

func RegisterJudgeServer(s *grpc.Server, srv JudgeServer) {
	s.RegisterService(&_Judge_serviceDesc, srv)
}

func _Judge_GetJudgeResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JudgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JudgeServer).GetJudgeResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Judge/GetJudgeResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JudgeServer).GetJudgeResult(ctx, req.(*JudgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Judge_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Judge",
	HandlerType: (*JudgeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetJudgeResult",
			Handler:    _Judge_GetJudgeResult_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "judge.proto",
}
