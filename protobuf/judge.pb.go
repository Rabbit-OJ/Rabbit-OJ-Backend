// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/judge.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type JudgeRequest struct {
	Sid                  string   `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Tid                  string   `protobuf:"bytes,2,opt,name=tid,proto3" json:"tid,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Language             string   `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	TimeLimit            uint32   `protobuf:"varint,5,opt,name=time_limit,json=timeLimit,proto3" json:"time_limit,omitempty"`
	SpaceLimit           uint32   `protobuf:"varint,6,opt,name=space_limit,json=spaceLimit,proto3" json:"space_limit,omitempty"`
	CompMode             string   `protobuf:"bytes,7,opt,name=comp_mode,json=compMode,proto3" json:"comp_mode,omitempty"`
	Code                 []byte   `protobuf:"bytes,8,opt,name=code,proto3" json:"code,omitempty"`
	Time                 int64    `protobuf:"varint,9,opt,name=time,proto3" json:"time,omitempty"`
	IsContest            bool     `protobuf:"varint,10,opt,name=is_contest,json=isContest,proto3" json:"is_contest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JudgeRequest) Reset()         { *m = JudgeRequest{} }
func (m *JudgeRequest) String() string { return proto.CompactTextString(m) }
func (*JudgeRequest) ProtoMessage()    {}
func (*JudgeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_948bd54255982cf6, []int{0}
}

func (m *JudgeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JudgeRequest.Unmarshal(m, b)
}
func (m *JudgeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JudgeRequest.Marshal(b, m, deterministic)
}
func (m *JudgeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JudgeRequest.Merge(m, src)
}
func (m *JudgeRequest) XXX_Size() int {
	return xxx_messageInfo_JudgeRequest.Size(m)
}
func (m *JudgeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JudgeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JudgeRequest proto.InternalMessageInfo

func (m *JudgeRequest) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *JudgeRequest) GetTid() string {
	if m != nil {
		return m.Tid
	}
	return ""
}

func (m *JudgeRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *JudgeRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *JudgeRequest) GetTimeLimit() uint32 {
	if m != nil {
		return m.TimeLimit
	}
	return 0
}

func (m *JudgeRequest) GetSpaceLimit() uint32 {
	if m != nil {
		return m.SpaceLimit
	}
	return 0
}

func (m *JudgeRequest) GetCompMode() string {
	if m != nil {
		return m.CompMode
	}
	return ""
}

func (m *JudgeRequest) GetCode() []byte {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *JudgeRequest) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *JudgeRequest) GetIsContest() bool {
	if m != nil {
		return m.IsContest
	}
	return false
}

type JudgeCaseResult struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	SpaceUsed            float64  `protobuf:"fixed64,2,opt,name=space_used,json=spaceUsed,proto3" json:"space_used,omitempty"`
	TimeUsed             uint32   `protobuf:"varint,3,opt,name=time_used,json=timeUsed,proto3" json:"time_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JudgeCaseResult) Reset()         { *m = JudgeCaseResult{} }
func (m *JudgeCaseResult) String() string { return proto.CompactTextString(m) }
func (*JudgeCaseResult) ProtoMessage()    {}
func (*JudgeCaseResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_948bd54255982cf6, []int{1}
}

func (m *JudgeCaseResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JudgeCaseResult.Unmarshal(m, b)
}
func (m *JudgeCaseResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JudgeCaseResult.Marshal(b, m, deterministic)
}
func (m *JudgeCaseResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JudgeCaseResult.Merge(m, src)
}
func (m *JudgeCaseResult) XXX_Size() int {
	return xxx_messageInfo_JudgeCaseResult.Size(m)
}
func (m *JudgeCaseResult) XXX_DiscardUnknown() {
	xxx_messageInfo_JudgeCaseResult.DiscardUnknown(m)
}

var xxx_messageInfo_JudgeCaseResult proto.InternalMessageInfo

func (m *JudgeCaseResult) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *JudgeCaseResult) GetSpaceUsed() float64 {
	if m != nil {
		return m.SpaceUsed
	}
	return 0
}

func (m *JudgeCaseResult) GetTimeUsed() uint32 {
	if m != nil {
		return m.TimeUsed
	}
	return 0
}

type JudgeResponse struct {
	Sid                  string             `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	IsContest            bool               `protobuf:"varint,2,opt,name=is_contest,json=isContest,proto3" json:"is_contest,omitempty"`
	Result               []*JudgeCaseResult `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *JudgeResponse) Reset()         { *m = JudgeResponse{} }
func (m *JudgeResponse) String() string { return proto.CompactTextString(m) }
func (*JudgeResponse) ProtoMessage()    {}
func (*JudgeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_948bd54255982cf6, []int{2}
}

func (m *JudgeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JudgeResponse.Unmarshal(m, b)
}
func (m *JudgeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JudgeResponse.Marshal(b, m, deterministic)
}
func (m *JudgeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JudgeResponse.Merge(m, src)
}
func (m *JudgeResponse) XXX_Size() int {
	return xxx_messageInfo_JudgeResponse.Size(m)
}
func (m *JudgeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JudgeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JudgeResponse proto.InternalMessageInfo

func (m *JudgeResponse) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *JudgeResponse) GetIsContest() bool {
	if m != nil {
		return m.IsContest
	}
	return false
}

func (m *JudgeResponse) GetResult() []*JudgeCaseResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type Case struct {
	Stdin                []byte   `protobuf:"bytes,1,opt,name=stdin,proto3" json:"stdin,omitempty"`
	Stdout               []byte   `protobuf:"bytes,2,opt,name=stdout,proto3" json:"stdout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Case) Reset()         { *m = Case{} }
func (m *Case) String() string { return proto.CompactTextString(m) }
func (*Case) ProtoMessage()    {}
func (*Case) Descriptor() ([]byte, []int) {
	return fileDescriptor_948bd54255982cf6, []int{3}
}

func (m *Case) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Case.Unmarshal(m, b)
}
func (m *Case) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Case.Marshal(b, m, deterministic)
}
func (m *Case) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Case.Merge(m, src)
}
func (m *Case) XXX_Size() int {
	return xxx_messageInfo_Case.Size(m)
}
func (m *Case) XXX_DiscardUnknown() {
	xxx_messageInfo_Case.DiscardUnknown(m)
}

var xxx_messageInfo_Case proto.InternalMessageInfo

func (m *Case) GetStdin() []byte {
	if m != nil {
		return m.Stdin
	}
	return nil
}

func (m *Case) GetStdout() []byte {
	if m != nil {
		return m.Stdout
	}
	return nil
}

type TestCaseRequest struct {
	Tid                  string   `protobuf:"bytes,1,opt,name=tid,proto3" json:"tid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestCaseRequest) Reset()         { *m = TestCaseRequest{} }
func (m *TestCaseRequest) String() string { return proto.CompactTextString(m) }
func (*TestCaseRequest) ProtoMessage()    {}
func (*TestCaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_948bd54255982cf6, []int{4}
}

func (m *TestCaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestCaseRequest.Unmarshal(m, b)
}
func (m *TestCaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestCaseRequest.Marshal(b, m, deterministic)
}
func (m *TestCaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestCaseRequest.Merge(m, src)
}
func (m *TestCaseRequest) XXX_Size() int {
	return xxx_messageInfo_TestCaseRequest.Size(m)
}
func (m *TestCaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestCaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestCaseRequest proto.InternalMessageInfo

func (m *TestCaseRequest) GetTid() string {
	if m != nil {
		return m.Tid
	}
	return ""
}

type TestCaseResponse struct {
	Tid                  string   `protobuf:"bytes,1,opt,name=tid,proto3" json:"tid,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Case                 []*Case  `protobuf:"bytes,2,rep,name=case,proto3" json:"case,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestCaseResponse) Reset()         { *m = TestCaseResponse{} }
func (m *TestCaseResponse) String() string { return proto.CompactTextString(m) }
func (*TestCaseResponse) ProtoMessage()    {}
func (*TestCaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_948bd54255982cf6, []int{5}
}

func (m *TestCaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestCaseResponse.Unmarshal(m, b)
}
func (m *TestCaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestCaseResponse.Marshal(b, m, deterministic)
}
func (m *TestCaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestCaseResponse.Merge(m, src)
}
func (m *TestCaseResponse) XXX_Size() int {
	return xxx_messageInfo_TestCaseResponse.Size(m)
}
func (m *TestCaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TestCaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TestCaseResponse proto.InternalMessageInfo

func (m *TestCaseResponse) GetTid() string {
	if m != nil {
		return m.Tid
	}
	return ""
}

func (m *TestCaseResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *TestCaseResponse) GetCase() []*Case {
	if m != nil {
		return m.Case
	}
	return nil
}

func init() {
	proto.RegisterType((*JudgeRequest)(nil), "protobuf.JudgeRequest")
	proto.RegisterType((*JudgeCaseResult)(nil), "protobuf.JudgeCaseResult")
	proto.RegisterType((*JudgeResponse)(nil), "protobuf.JudgeResponse")
	proto.RegisterType((*Case)(nil), "protobuf.Case")
	proto.RegisterType((*TestCaseRequest)(nil), "protobuf.TestCaseRequest")
	proto.RegisterType((*TestCaseResponse)(nil), "protobuf.TestCaseResponse")
}

func init() { proto.RegisterFile("protobuf/judge.proto", fileDescriptor_948bd54255982cf6) }

var fileDescriptor_948bd54255982cf6 = []byte{
	// 440 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x6f, 0x8b, 0xd3, 0x40,
	0x10, 0xc6, 0x49, 0xd3, 0xf6, 0x92, 0x69, 0xef, 0x0f, 0xcb, 0xa1, 0x6b, 0x45, 0x0c, 0xf1, 0x4d,
	0x5e, 0x55, 0xac, 0x7e, 0x01, 0x39, 0xe1, 0xe0, 0x50, 0x90, 0x45, 0x5f, 0x97, 0x34, 0x3b, 0x96,
	0x95, 0x36, 0xa9, 0x9d, 0x89, 0x9f, 0xc2, 0x0f, 0x2d, 0x3b, 0x9b, 0xb4, 0x5e, 0x2d, 0xf7, 0x6e,
	0xe7, 0xf7, 0x0c, 0xb3, 0xcf, 0x33, 0xbb, 0x70, 0xbb, 0xdb, 0x37, 0xdc, 0xac, 0xda, 0x1f, 0x6f,
	0x7f, 0xb6, 0x76, 0x8d, 0x73, 0x29, 0x55, 0xd2, 0xd3, 0xfc, 0xcf, 0x00, 0xa6, 0x0f, 0x5e, 0x31,
	0xf8, 0xab, 0x45, 0x62, 0x75, 0x03, 0x31, 0x39, 0xab, 0xa3, 0x2c, 0x2a, 0x52, 0xe3, 0x8f, 0x9e,
	0xb0, 0xb3, 0x7a, 0x10, 0x08, 0x3b, 0xab, 0x34, 0x5c, 0xfc, 0xc6, 0x3d, 0xb9, 0xa6, 0xd6, 0xb1,
	0xd0, 0xbe, 0x54, 0x33, 0x48, 0x36, 0x65, 0xbd, 0x6e, 0xcb, 0x35, 0xea, 0xa1, 0x48, 0x87, 0x5a,
	0xbd, 0x02, 0x60, 0xb7, 0xc5, 0xe5, 0xc6, 0x6d, 0x1d, 0xeb, 0x51, 0x16, 0x15, 0x97, 0x26, 0xf5,
	0xe4, 0xb3, 0x07, 0xea, 0x35, 0x4c, 0x68, 0x57, 0x56, 0xbd, 0x3e, 0x16, 0x1d, 0x04, 0x85, 0x86,
	0x97, 0x90, 0x56, 0xcd, 0x76, 0xb7, 0xdc, 0x36, 0x16, 0xf5, 0x45, 0x18, 0xee, 0xc1, 0x97, 0xc6,
	0xa2, 0x52, 0x30, 0xac, 0x3c, 0x4f, 0xb2, 0xa8, 0x98, 0x1a, 0x39, 0x7b, 0xe6, 0xc7, 0xeb, 0x34,
	0x8b, 0x8a, 0xd8, 0xc8, 0xd9, 0x9b, 0x70, 0xb4, 0xac, 0x9a, 0x9a, 0x91, 0x58, 0x43, 0x16, 0x15,
	0x89, 0x49, 0x1d, 0xdd, 0x05, 0x90, 0x23, 0x5c, 0xcb, 0x36, 0xee, 0x4a, 0x42, 0x83, 0xd4, 0x6e,
	0x58, 0x3d, 0x83, 0x31, 0x71, 0xc9, 0x2d, 0x75, 0x3b, 0xe9, 0x2a, 0x3f, 0x29, 0xf8, 0x6d, 0x09,
	0xc3, 0x76, 0x22, 0x93, 0x0a, 0xf9, 0x4e, 0x68, 0xbd, 0x5b, 0x49, 0x2b, 0x6a, 0x2c, 0x61, 0x12,
	0x0f, 0xbc, 0x98, 0x13, 0x5c, 0x76, 0x4b, 0xa7, 0x5d, 0x53, 0x13, 0x9e, 0xd9, 0xfa, 0x63, 0xa3,
	0x83, 0x13, 0xa3, 0xea, 0x1d, 0x8c, 0xf7, 0xe2, 0x4f, 0xc7, 0x59, 0x5c, 0x4c, 0x16, 0x2f, 0xe6,
	0xfd, 0x93, 0xce, 0x4f, 0x02, 0x98, 0xae, 0x31, 0xff, 0x00, 0x43, 0x4f, 0xd5, 0x2d, 0x8c, 0x88,
	0xad, 0xab, 0xe5, 0xb6, 0xa9, 0x09, 0x45, 0x88, 0x69, 0x9b, 0x36, 0xdc, 0x35, 0x35, 0x5d, 0x95,
	0xbf, 0x81, 0xeb, 0x6f, 0x48, 0x1c, 0xe6, 0x1d, 0xbe, 0x08, 0x1f, 0xcd, 0xb2, 0xb3, 0xf9, 0x0a,
	0x6e, 0x8e, 0x4d, 0xc7, 0x48, 0x8f, 0xbb, 0x9e, 0xf8, 0x36, 0x39, 0x0c, 0xab, 0x92, 0x50, 0x0f,
	0x24, 0xcb, 0xd5, 0x31, 0x8b, 0x4c, 0x14, 0x6d, 0xf1, 0x00, 0x23, 0x49, 0xa6, 0x3e, 0xc2, 0xd5,
	0x3d, 0x72, 0xbf, 0x3f, 0x79, 0xa2, 0x93, 0xf0, 0x9d, 0xd1, 0xd9, 0xf3, 0xff, 0x78, 0xf0, 0xb6,
	0xf8, 0x0a, 0x49, 0xef, 0x57, 0x7d, 0x82, 0xc9, 0x3d, 0xf2, 0xa1, 0xfc, 0x67, 0x91, 0x27, 0xb9,
	0x67, 0xb3, 0x73, 0x52, 0x98, 0xb8, 0x1a, 0x8b, 0xf4, 0xfe, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x0a, 0x0a, 0x98, 0x17, 0x70, 0x03, 0x00, 0x00,
}
